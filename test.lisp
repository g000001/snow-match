(cl:in-package :snow-match.internal)
(in-readtable :quasiquote)

(def-suite snow-match)

(in-suite snow-match)

(define-syntax isqu
  (syntax-rules ()
    ((isqu x y)
     (is (equal x y)))))

(test match
  (isqu (match (list 1 2 3)
          ((a . b) (list a b)))
        '(1 (2 3)))
  (isqu (match '(1 2 3)
        ((a . b) (list a b)))
      '(1 (2 3)))
  (isqu (match '(1 2 (3) (4 5 6))
          ((a b (c) (d e f)) (list a b c d e f)))
        '(1 2 3 4 5 6))
  (isqu (match (list 3)
          (`(,a) (list a)))
        '(3))
  (isqu (match '(0 (1 2) (3 4 5))
        ((a (b c) (d e f))
         (list a b c d e f)))
      '(0 1 2 3 4 5))
  (isqu (match 123
          ((? stringp x) (list 'string x))
          ((? numberp x) (list 'number x)))
        '(NUMBER 123))
  (isqu (match '(the answer iis 42)
        (`(the answer is ,value) value)
        (else :false))
      :FALSE)
  (isqu (match '(the answer was 42)
          ((quasiquote (the answer is (unquote value))) value)
          (else :false))
        :FALSE)
  (isqu (match '(the answer is 42)
          ((the answer is value) value)
          (else :false))
        42)
  (isqu (match '(a b c &optional o)
          ((a b c '&optional z) (list a b c z)))
        '(A B C O))
  (isqu (mapcar (match-lambda ((a b c (d)) (list a b c d))
                              ((a b (c) d) (list a b c d))
                              ((a (b) c d) (list a b c d))
                              ((a b c d) (list a b c d)))
                '((1 2 3 4)
                  (2 (2) 3 4)
                  (3 2 (3) 4)
                  (4 2 3 (4))))
        '((1 2 3 4) (2 2 3 4) (3 2 3 4) (4 2 3 4))))
